---

- name: Deploy sample app to 'remote host'
  hosts: default

  vars_files:
    - vars.yml

  tasks:
    - name: Get current time, for rollbacks
      set_fact:
        timestamp: '{{ ansible_date_time.iso8601_basic }}'

    - name: Make versioned deploy directory
      file:
        path: '{{ install_directory }}-{{ timestamp }}'
        state: directory

    - name: Remove old 'current' symlink
      file:
        path: '{{ install_directory }}'
        state: absent

    - name: Make 'current' symlink
      file:
        path: '{{ install_directory }}'
        src: '{{ install_directory }}-{{ timestamp }}'
        state: link

    - name: Copy app
      # synchronize module doesn't work well with Vagrant;
      # ansible.cfg has our back
      # As the timestamp on db/ gets updated, we
      # ignore timestamps when sync'ing the app
      synchronize:
        dest: '{{ install_directory }}'
        src: '{{ app_name }}'
        use_ssh_args: true
        archive: false
        perms: true
        times: false
        recursive: true
        checksum: true
      notify:
        - Install gem build and runtime dependecies
        - Install gems
        - Migrate the database
        - Create local filestore
        - Copy files to local storage
        - Set up datastore symlinks

  handlers:

    - name: Install gem build and runtime dependecies
      apt:
        name: '{{ item }}'
        state: present
      become: true
      with_items:
        - '{{ gem_dependecies }}'
        - '{{ runtime_dependecies }}'

    - name: Install gems
      bundler:
        chdir: '{{ install_directory }}/{{ app_name }}'
        deployment_mode: '{{ deploy | default(false) }}'
        state: present

    - name: Migrate the database
      command: bin/rake db:migrate
      args:
        chdir: '{{ install_directory }}/{{ app_name }}'
      environment:
        RAILS_ENV: development
      register: out
      changed_when: out.stdout != ''

    - name: Create local filestore
      file:
        dest: '{{ local_datastore }}'
        state: directory

    - name: Copy files to local storage
      copy:
        dest: '{{ local_datastore }}'
        src: '{{ install_directory }}/{{ app_name }}/{{ item }}'
        remote_src: true
      with_items:
        - squirrel.jpeg

    - name: Set up datastore symlinks
      file:
        dest: '{{ install_directory }}/{{ app_name }}/private'
        src: '{{ local_datastore }}'
        state: link
